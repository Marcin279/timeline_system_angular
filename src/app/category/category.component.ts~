import { Component, OnInit } from '@angular/core';
import { SharedService } from 'src/app/shared/shared.service';
import { CategoryDTO } from 'src/app/dto/CategoryDTO';

@Component({
  selector: 'app-category',
  templateUrl: './category.component.html',
  styleUrls: ['./category.component.css']
})
export class CategoryComponent implements OnInit {
  categories: CategoryDTO[] = [];  // Lista kategorii, która będzie wyświetlana
  newCategory: CategoryDTO = {     // Obiekt nowej kategorii
    name: '',
    iconName: '',
    color: ''
  };

  constructor(private sharedService: SharedService) {}

  ngOnInit(): void {
    // Subskrybuj zmiany w kategoriach z SharedService
    this.sharedService.getAllCategories().subscribe((categories) => {
      this.categories = categories;
      console.log('Zaktualizowane kategorie:', this.categories);
    });
  }

  // Dodaj nową kategorię
  addCategory(): void {
    if (this.newCategory.name && this.newCategory.iconName && this.newCategory.color) {
      this.sharedService.addCategory(this.newCategory);
      this.resetForm();  // Resetujemy formularz po dodaniu
    } else {
      console.error('Wszystkie pola muszą być wypełnione.');
    }
  }

  // Edytuj kategorię
  editCategory(category: CategoryDTO): void {
    const updatedCategory: CategoryDTO = { ...category };  // Tworzymy kopię, aby móc ją edytować
    updatedCategory.name = 'Nowa nazwa';  // Przykładowa zmiana, zmień według potrzeb
    updatedCategory.iconName = 'new-icon'; // Zaktualizuj według formularza
    updatedCategory.color = '#00FF00'; // Zaktualizuj kolor

    this.sharedService.updateCategory(category.name, updatedCategory);  // Zaktualizowanie kategorii w SharedService
  }

  // Usuń kategorię
  deleteCategory(category: CategoryDTO): void {
    this.sharedService.deleteCategory(category.name);  // Usunięcie kategorii z SharedService
  }

  // Resetowanie formularza
  resetForm(): void {
    this.newCategory = { name: '', iconName: '', color: '' };
  }
}
